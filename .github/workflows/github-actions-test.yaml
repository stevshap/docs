# Copyright (c) 2023, Oracle Corporation and/or its affiliates.
#
# Licensed under the Universal Permissive License v 1.0 as shown at
# http://oss.oracle.com/licenses/upl.

# ---------------------------------------------------------------------------
# Verrazzano GitHub Actions GH Pages build.
# ---------------------------------------------------------------------------

name: Build and Publish Verrazzano Documentation

on:
  # Runs on pushes targeting the active doc branches
  push:
#    branches:
#    - master
#    - release-*
#    - archive

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: 0.111.3
      HUGO_ENVIRONMENT: production
      HUGO_ENV: production
    steps:
      # Initial setup
      - name: Install Hugo CLI
        run: |
          wget -O ${{ runner.temp }}/hugo.deb \
          https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb
      - name: Checkout repository code
        uses: actions/checkout@v3
      - name: Install Node.js dependencies
        run: npm ci
      - name: Setup Pages
        uses: actions/configure-pages@v3

      # Oracle Docs builds
      - name: Build zip for Oracle Docs
        run: |
          mkdir -p public
          cp content/en/docs/setup/private-registry/private-registry-full-distribution.md \
          content/en/docs/setup/private-registry/private-registry.md
          hugo --source . --destination public --environment production
          zip -r verrazzano-production-docs.zip public
      - name: Upload public artifacts
        uses: actions/upload-artifact@v3
        with:
          path: public/**
          name: public
      - name: Upload zip artifact
        uses: actions/upload-artifact@v3
        with:
          path: verrazzano-production-docs.zip
          name: verrazzano-production-docs.zip

      # Extract branch name
      - name: Extract branch name
        shell: bash
        run: echo "BRANCH=$(echo ${GITHUB_REF#refs/heads/})" >> "$GITHUB_ENV"
      # Extract publish branch to use (v1.x, devel, archive)
      - name: Process branch version
        shell: bash
        env:
          BRANCH: ${{ env.BRANCH }}
        run: ./scripts/branch.sh ${BRANCH}
      # Extract IS_LATEST variable
      - name: Process IS_LATEST
        run: echo "IS_LATEST=$(<.latest)" >> "$GITHUB_ENV"

      # Build and upload docs under ${version} dir
      - name: Build production documentation
        run: |
          mkdir -p $VERSION
          hugo --source . --destination $VERSION --environment production
      - name: Upload production artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.VERSION }}
          path: ${{ env.VERSION }}/**

      # Build and upload docs under "latest" dir (if applicable)
      - name: Build latest documentation
        if: ${{ env.IS_LATEST == 'true' }}
        run: |
          mkdir -p latest
          hugo --source . --destination latest --environment production
      - name: Upload latest artifacts
        if: ${{ env.IS_LATEST == 'true' }}
        uses: actions/upload-artifact@v3
        with:
          name: latest
          path: latest/**

      # Deploy docs under version
      - name: Deploy production to GH pages
        id: deployment
        env:
          name: github-pages
          url: ${{ steps.deployment.outputs.page_url }}
        uses: actions/deploy-pages@v2
        with:
          artifact_name: ${{ env.VERSION }}

        # Deploy docs under latest (if applicable)
      - name: Deploy production to GH pages
        id: deploy-latest
        if: ${{ env.IS_LATEST == 'true' }}
        env:
          name: github-pages
          url: ${{ steps.deploy-latest.outputs.page_url }}
        uses: actions/deploy-pages@v2
        with:
          artifact_name: latest
